# Publish package on main branch if it's tagged with 'v*'

name: release & publish workflow

# Controls when the action will run.
on:
  workflow_run:
    workflows: ["dev"]
    branches: [main]
    types:
      - completed
    tags:
      - 'v*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "release"
  release:
    name: Create Release
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-versions: ["3.10"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/develop.txt
          pip install -r docs/requirements.txt
          pip install -e .
      - id: doc
        run: |
          cd docs
          make html
      # - name upload_artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: doc_build
      #     path: |
      #       docs/build/html
      - name: publish documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html

      - name: Build wheels and source tarball
        run: |
          python -m build --wheel
          python -m build --sdist

      - name: create github release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: ${{ steps.changelog_reader.outputs.changes }}
          files: dist/*
          draft: false
          prerelease: false
